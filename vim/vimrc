call plug#begin()

Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'ntpeters/vim-better-whitespace'

Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

Plug 'ocaml/vim-ocaml'

Plug 'prabirshrestha/vim-lsp'

call plug#end()

if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

set background=dark                       " Set background theme to dark
set encoding=utf-8                        " Default to UTF-8
set termencoding=utf-8                    " Force UTF-8 terminal
set shell=/usr/local/bin/bash             " Set default shell
set cmdheight=1                           " Bottom command line height
set cursorline cursorcolumn               " Display a crosshair over the cursor
set expandtab                             " Expand tabs to spaces
set hidden                                " Don't force save when moving between buffers
set ignorecase smartcase                  " Case insensitive search unless caps
set mouse=a                               " Enable mouse interaction
set nobackup nowritebackup noswapfile     " Disable backups
set noerrorbells                          " Disable all bells
set noshowmode                            " Already displaying mode in airline
set shiftwidth=4 softtabstop=4 tabstop=4  " 4 space indents
set shortmess=aIc                         " Shorten messages
set showcmd                               " Show status for running commands
set splitbelow splitright                 " Splitting behavior
set whichwrap=<,>,[,],h,l                 " Configure line wrapping
set backspace=indent,eol,start            " Fix backspace on macOS
set autoindent smartindent
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set completeopt=noselect,noinsert,menuone
set timeoutlen=1000 ttimeoutlen=0 " Shorten sequence timeouts to speed up responsiveness

let g:gruvbox_contrast_dark = 'hard'
colorscheme gruvbox

" Disable arrow keys for movement
inoremap <up>     <NOP>
inoremap <down>   <NOP>
inoremap <left>   <NOP>
inoremap <right>  <NOP>
noremap  <up>     <NOP>
noremap  <down>   <NOP>

noremap  <Left>  :bp<CR>
noremap  <Right> :bn<CR>

nnoremap <leader>b :Buffers<CR>
nnoremap <leader>f :Files<CR>
nnoremap <leader>m :Marks<CR>
nnoremap <leader>l :Lines<CR>
nnoremap <leader>w :Windows<CR>

let g:maplocalleader = ','

let g:airline#extensions#tabline#enabled = 1

let g:fzf_layout = { 'down': '~20%' }

augroup rlb_global
  au!
  au BufEnter * set formatoptions-=c formatoptions-=r formatoptions-=o
  au WinLeave * set nocursorline nocursorcolumn
  au WinEnter * set cursorline cursorcolumn
  au FileType help noremap <buffer> <ESC> :q<CR>
augroup END

let g:lsp_signs_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_highlight_references_enabled = 1

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gt <plug>(lsp-type-definition)
    nmap <buffer> <leader>r <plug>(lsp-rename)
    nmap <buffer> [g <Plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <Plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
endfunction

aug LspConfig
    au!
    " go
    au User lsp_setup call lsp#register_server({
    \  'name': 'gopls',
    \  'cmd': {server_info->['gopls']},
    \  'allowlist': ['go'],
    \})

    " ocaml
    au User lsp_setup call lsp#register_server({
    \  'name': 'ocamllsp',
    \  'cmd': {server_info->['ocamllsp']},
    \  'allowlist': ['ocaml'],
    \})

    autocmd User lsp_float_opened call popup_setoptions(lsp#ui#vim#output#getpreviewwinid(), {
    \  'borderchars': ['─', '│', '─', '│', '┌', '┐', '┘', '└'],
    \  'padding': [0, 1, 0, 1]
    \})

    au User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
aug END
